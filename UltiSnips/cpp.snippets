# --------------------
# 	Course Snippets
# --------------------


snippet 135 "File preamble for CSCI-135" 
/*
Author: Soren Soroush
Course: CSCI-135
Instructor: Tong Yi
Assignment: $1

$2

*/


endsnippet


snippet 235 "Heading template for 235" 
// File: `!v expand ('%:t')`
// Author: Soren Soroush
// Date: `date +%-m/%-d/%y`
// $1

endsnippet


# --------------------
# 	   Snippets
# --------------------


snippet main "Basic boilerplate" 
#include <iostream>
$1

int main() {
	$0

	return 0;
}
endsnippet


# Can this snippet deal with whitespace?
snippet if "If statement" 
if ($1) {
	$2
} $0
endsnippet


snippet for "For loops" 
for (${1:int i = 0}; $2; ${3:i++}) {
	$4
}
endsnippet


snippet inf "Include directive (for file)" 
#include "$1"
endsnippet


snippet in "Include directive" 
#include <$1>
endsnippet


snippet "(\d+)?nl" "Variable newline" r
`!p
#snip.rv = f"\"{\""
nl = "\\n"
snip.rv =  f"\"{int(match.group(1)) * nl}\"" if match.group(1) else "\"\\n\""
`
endsnippet


snippet ffail "Test for file failure" 
if ($1.fail()) {
	cerr << "Error: File not found" << endl;
	exit(2);
}
endsnippet


snippet com "Multiline comment" 
/*
	$1
*/
endsnippet


snippet s "Standard library keyword" i
std::
endsnippet


snippet hdr "Header boilerplate" 
#ifndef $1
#define $1

$2

#endif // $1
endsnippet


snippet v "Vector" i
std::vector<$1>
endsnippet


snippet vp "Vector print" 
for (auto $1:$2)
	std::cout << $1 << " ";
std::cout << "$3: ";
for (auto $1:$4($2))
	std::cout << $1 << " ";
std::cout << "\n";
endsnippet


snippet c "cout" 
std::cout
endsnippet


snippet e "endl" 
std::endl
endsnippet


snippet st "string" i
std::string
endsnippet
